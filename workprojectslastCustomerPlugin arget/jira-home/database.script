CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE JIRAACTION(ID BIGINT NOT NULL,ISSUEID BIGINT,AUTHOR VARCHAR,ACTIONTYPE VARCHAR,ACTIONLEVEL VARCHAR,ROLELEVEL BIGINT,ACTIONBODY VARCHAR,CREATED TIMESTAMP,UPDATEAUTHOR VARCHAR,UPDATED TIMESTAMP,ACTIONNUM BIGINT,CONSTRAINT PK_JIRAACTION PRIMARY KEY(ID))
CREATE INDEX ACTION_ISSUE ON JIRAACTION(ISSUEID,ACTIONTYPE)
CREATE MEMORY TABLE CHANGEGROUP(ID BIGINT NOT NULL,ISSUEID BIGINT,AUTHOR VARCHAR,CREATED TIMESTAMP,CONSTRAINT PK_CHANGEGROUP PRIMARY KEY(ID))
CREATE INDEX CHGGROUP_ISSUE ON CHANGEGROUP(ISSUEID)
CREATE MEMORY TABLE CHANGEITEM(ID BIGINT NOT NULL,GROUPID BIGINT,FIELDTYPE VARCHAR,FIELD VARCHAR,OLDVALUE VARCHAR,OLDSTRING VARCHAR,NEWVALUE VARCHAR,NEWSTRING VARCHAR,CONSTRAINT PK_CHANGEITEM PRIMARY KEY(ID))
CREATE INDEX CHGITEM_CHGGRP ON CHANGEITEM(GROUPID)
CREATE INDEX CHGITEM_FIELD ON CHANGEITEM(FIELD)
CREATE MEMORY TABLE COLUMNLAYOUT(ID BIGINT NOT NULL,USERNAME VARCHAR,SEARCHREQUEST BIGINT,CONSTRAINT PK_COLUMNLAYOUT PRIMARY KEY(ID))
CREATE MEMORY TABLE COLUMNLAYOUTITEM(ID BIGINT NOT NULL,COLUMNLAYOUT BIGINT,FIELDIDENTIFIER VARCHAR,HORIZONTALPOSITION BIGINT,CONSTRAINT PK_COLUMNLAYOUTITEM PRIMARY KEY(ID))
CREATE MEMORY TABLE COMPONENT(ID BIGINT NOT NULL,PROJECT BIGINT,CNAME VARCHAR,DESCRIPTION VARCHAR,URL VARCHAR,LEAD VARCHAR,ASSIGNEETYPE BIGINT,CONSTRAINT PK_COMPONENT PRIMARY KEY(ID))
CREATE MEMORY TABLE CONFIGURATIONCONTEXT(ID BIGINT NOT NULL,PROJECTCATEGORY BIGINT,PROJECT BIGINT,CUSTOMFIELD VARCHAR,FIELDCONFIGSCHEME BIGINT,CONSTRAINT PK_CONFIGURATIONCONTEXT PRIMARY KEY(ID))
CREATE INDEX CONFCONTEXT ON CONFIGURATIONCONTEXT(PROJECTCATEGORY,PROJECT,CUSTOMFIELD)
CREATE MEMORY TABLE CUSTOMFIELD(ID BIGINT NOT NULL,CUSTOMFIELDTYPEKEY VARCHAR,CUSTOMFIELDSEARCHERKEY VARCHAR,CFNAME VARCHAR,DESCRIPTION VARCHAR,DEFAULTVALUE VARCHAR,FIELDTYPE BIGINT,PROJECT BIGINT,ISSUETYPE VARCHAR,CONSTRAINT PK_CUSTOMFIELD PRIMARY KEY(ID))
CREATE MEMORY TABLE CUSTOMFIELDOPTION(ID BIGINT NOT NULL,CUSTOMFIELD BIGINT,CUSTOMFIELDCONFIG BIGINT,PARENTOPTIONID BIGINT,SEQUENCE BIGINT,CUSTOMVALUE VARCHAR,OPTIONTYPE VARCHAR,CONSTRAINT PK_CUSTOMFIELDOPTION PRIMARY KEY(ID))
CREATE INDEX CF_CFOPTION ON CUSTOMFIELDOPTION(CUSTOMFIELD)
CREATE MEMORY TABLE CUSTOMFIELDVALUE(ID BIGINT NOT NULL,ISSUE BIGINT,CUSTOMFIELD BIGINT,PARENTKEY VARCHAR,STRINGVALUE VARCHAR,NUMBERVALUE DOUBLE,TEXTVALUE VARCHAR,DATEVALUE TIMESTAMP,VALUETYPE VARCHAR,CONSTRAINT PK_CUSTOMFIELDVALUE PRIMARY KEY(ID))
CREATE INDEX CFVALUE_ISSUE ON CUSTOMFIELDVALUE(ISSUE,CUSTOMFIELD)
CREATE MEMORY TABLE JIRAEVENTTYPE(ID BIGINT NOT NULL,TEMPLATE_ID BIGINT,NAME VARCHAR,DESCRIPTION VARCHAR,EVENT_TYPE VARCHAR,CONSTRAINT PK_JIRAEVENTTYPE PRIMARY KEY(ID))
CREATE MEMORY TABLE EXTERNAL_ENTITIES(ID BIGINT NOT NULL,NAME VARCHAR,ENTITYTYPE VARCHAR,CONSTRAINT PK_EXTERNAL_ENTITIES PRIMARY KEY(ID))
CREATE INDEX EXT_ENTITY_NAME ON EXTERNAL_ENTITIES(NAME)
CREATE MEMORY TABLE FIELDCONFIGSCHEME(ID BIGINT NOT NULL,CONFIGNAME VARCHAR,DESCRIPTION VARCHAR,FIELDID VARCHAR,CUSTOMFIELD BIGINT,CONSTRAINT PK_FIELDCONFIGSCHEME PRIMARY KEY(ID))
CREATE INDEX FCS_FIELDID ON FIELDCONFIGSCHEME(FIELDID)
CREATE MEMORY TABLE FIELDCONFIGSCHEMEISSUETYPE(ID BIGINT NOT NULL,ISSUETYPE VARCHAR,FIELDCONFIGSCHEME BIGINT,FIELDCONFIGURATION BIGINT,CONSTRAINT PK_FIELDCONFIGSCHEMEISSUETYPE PRIMARY KEY(ID))
CREATE INDEX FCS_ISSUETYPE ON FIELDCONFIGSCHEMEISSUETYPE(ISSUETYPE)
CREATE INDEX FCS_SCHEME ON FIELDCONFIGSCHEMEISSUETYPE(FIELDCONFIGSCHEME)
CREATE MEMORY TABLE FIELDCONFIGURATION(ID BIGINT NOT NULL,CONFIGNAME VARCHAR,DESCRIPTION VARCHAR,FIELDID VARCHAR,CUSTOMFIELD BIGINT,CONSTRAINT PK_FIELDCONFIGURATION PRIMARY KEY(ID))
CREATE INDEX FC_FIELDID ON FIELDCONFIGURATION(FIELDID)
CREATE MEMORY TABLE FIELDLAYOUT(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,LAYOUT_TYPE VARCHAR,LAYOUTSCHEME BIGINT,CONSTRAINT PK_FIELDLAYOUT PRIMARY KEY(ID))
CREATE MEMORY TABLE FIELDLAYOUTITEM(ID BIGINT NOT NULL,FIELDLAYOUT BIGINT,FIELDIDENTIFIER VARCHAR,DESCRIPTION VARCHAR,VERTICALPOSITION BIGINT,ISHIDDEN VARCHAR,ISREQUIRED VARCHAR,RENDERERTYPE VARCHAR,CONSTRAINT PK_FIELDLAYOUTITEM PRIMARY KEY(ID))
CREATE MEMORY TABLE FIELDLAYOUTSCHEME(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,CONSTRAINT PK_FIELDLAYOUTSCHEME PRIMARY KEY(ID))
CREATE MEMORY TABLE FIELDLAYOUTSCHEMEASSOCIATION(ID BIGINT NOT NULL,ISSUETYPE VARCHAR,PROJECT BIGINT,FIELDLAYOUTSCHEME BIGINT,CONSTRAINT PK_FIELDLAYOUTSCHEMEASSOCIATIO PRIMARY KEY(ID))
CREATE INDEX FL_SCHEME_ASSOC ON FIELDLAYOUTSCHEMEASSOCIATION(PROJECT,ISSUETYPE)
CREATE MEMORY TABLE FIELDLAYOUTSCHEMEENTITY(ID BIGINT NOT NULL,SCHEME BIGINT,ISSUETYPE VARCHAR,FIELDLAYOUT BIGINT,CONSTRAINT PK_FIELDLAYOUTSCHEMEENTITY PRIMARY KEY(ID))
CREATE INDEX FIELDLAYOUT_SCHEME ON FIELDLAYOUTSCHEMEENTITY(SCHEME)
CREATE INDEX FIELDLAYOUT_LAYOUT ON FIELDLAYOUTSCHEMEENTITY(FIELDLAYOUT)
CREATE MEMORY TABLE FIELDSCREEN(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,CONSTRAINT PK_FIELDSCREEN PRIMARY KEY(ID))
CREATE MEMORY TABLE FIELDSCREENLAYOUTITEM(ID BIGINT NOT NULL,FIELDIDENTIFIER VARCHAR,SEQUENCE BIGINT,FIELDSCREENTAB BIGINT,CONSTRAINT PK_FIELDSCREENLAYOUTITEM PRIMARY KEY(ID))
CREATE INDEX FIELDSCITEM_TAB ON FIELDSCREENLAYOUTITEM(FIELDSCREENTAB)
CREATE INDEX FIELDSCREEN_FIELD ON FIELDSCREENLAYOUTITEM(FIELDIDENTIFIER)
CREATE MEMORY TABLE FIELDSCREENSCHEME(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,CONSTRAINT PK_FIELDSCREENSCHEME PRIMARY KEY(ID))
CREATE MEMORY TABLE FIELDSCREENSCHEMEITEM(ID BIGINT NOT NULL,OPERATION BIGINT,FIELDSCREEN BIGINT,FIELDSCREENSCHEME BIGINT,CONSTRAINT PK_FIELDSCREENSCHEMEITEM PRIMARY KEY(ID))
CREATE INDEX SCREENITEM_SCHEME ON FIELDSCREENSCHEMEITEM(FIELDSCREENSCHEME)
CREATE MEMORY TABLE FIELDSCREENTAB(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,SEQUENCE BIGINT,FIELDSCREEN BIGINT,CONSTRAINT PK_FIELDSCREENTAB PRIMARY KEY(ID))
CREATE INDEX FIELDSCREEN_TAB ON FIELDSCREENTAB(FIELDSCREEN)
CREATE MEMORY TABLE FILEATTACHMENT(ID BIGINT NOT NULL,ISSUEID BIGINT,MIMETYPE VARCHAR,FILENAME VARCHAR,CREATED TIMESTAMP,FILESIZE BIGINT,AUTHOR VARCHAR,CONSTRAINT PK_FILEATTACHMENT PRIMARY KEY(ID))
CREATE INDEX ATTACH_ISSUE ON FILEATTACHMENT(ISSUEID)
CREATE MEMORY TABLE FILTERSUBSCRIPTION(ID BIGINT NOT NULL,FILTER_I_D BIGINT,USERNAME VARCHAR,GROUPNAME VARCHAR,LAST_RUN TIMESTAMP,EMAIL_ON_EMPTY VARCHAR,CONSTRAINT PK_FILTERSUBSCRIPTION PRIMARY KEY(ID))
CREATE INDEX SUBSCRPT_USER ON FILTERSUBSCRIPTION(FILTER_I_D,USERNAME)
CREATE INDEX SUBSCRPTN_GROUP ON FILTERSUBSCRIPTION(FILTER_I_D,GROUPNAME)
CREATE MEMORY TABLE GENERICCONFIGURATION(ID BIGINT NOT NULL,DATATYPE VARCHAR,DATAKEY VARCHAR,XMLVALUE VARCHAR,CONSTRAINT PK_GENERICCONFIGURATION PRIMARY KEY(ID))
CREATE UNIQUE INDEX TYPE_KEY ON GENERICCONFIGURATION(DATATYPE,DATAKEY)
CREATE MEMORY TABLE JIRAISSUE(ID BIGINT NOT NULL,PKEY VARCHAR,PROJECT BIGINT,REPORTER VARCHAR,ASSIGNEE VARCHAR,ISSUETYPE VARCHAR,SUMMARY VARCHAR,DESCRIPTION VARCHAR,ENVIRONMENT VARCHAR,PRIORITY VARCHAR,RESOLUTION VARCHAR,ISSUESTATUS VARCHAR,CREATED TIMESTAMP,UPDATED TIMESTAMP,DUEDATE TIMESTAMP,VOTES BIGINT,TIMEORIGINALESTIMATE BIGINT,TIMEESTIMATE BIGINT,TIMESPENT BIGINT,WORKFLOW_ID BIGINT,SECURITY BIGINT,FIXFOR BIGINT,COMPONENT BIGINT,CONSTRAINT PK_JIRAISSUE PRIMARY KEY(ID))
CREATE INDEX ISSUE_KEY ON JIRAISSUE(PKEY)
CREATE INDEX ISSUE_PROJ_STATUS ON JIRAISSUE(PROJECT,ISSUESTATUS)
CREATE INDEX ISSUE_ASSIGNEE ON JIRAISSUE(ASSIGNEE)
CREATE INDEX ISSUE_WORKFLOW ON JIRAISSUE(WORKFLOW_ID)
CREATE MEMORY TABLE ISSUELINK(ID BIGINT NOT NULL,LINKTYPE BIGINT,SOURCE BIGINT,DESTINATION BIGINT,SEQUENCE BIGINT,CONSTRAINT PK_ISSUELINK PRIMARY KEY(ID))
CREATE INDEX ISSUELINK_SRC ON ISSUELINK(SOURCE)
CREATE INDEX ISSUELINK_DEST ON ISSUELINK(DESTINATION)
CREATE INDEX ISSUELINK_TYPE ON ISSUELINK(LINKTYPE)
CREATE MEMORY TABLE ISSUELINKTYPE(ID BIGINT NOT NULL,LINKNAME VARCHAR,INWARD VARCHAR,OUTWARD VARCHAR,PSTYLE VARCHAR,CONSTRAINT PK_ISSUELINKTYPE PRIMARY KEY(ID))
CREATE INDEX LINKTYPENAME ON ISSUELINKTYPE(LINKNAME)
CREATE INDEX LINKTYPESTYLE ON ISSUELINKTYPE(PSTYLE)
CREATE MEMORY TABLE ISSUESECURITYSCHEME(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,DEFAULTLEVEL BIGINT,CONSTRAINT PK_ISSUESECURITYSCHEME PRIMARY KEY(ID))
CREATE MEMORY TABLE ISSUETYPE(ID VARCHAR NOT NULL,SEQUENCE BIGINT,PNAME VARCHAR,PSTYLE VARCHAR,DESCRIPTION VARCHAR,ICONURL VARCHAR,CONSTRAINT PK_ISSUETYPE PRIMARY KEY(ID))
CREATE MEMORY TABLE ISSUETYPESCREENSCHEME(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,CONSTRAINT PK_ISSUETYPESCREENSCHEME PRIMARY KEY(ID))
CREATE MEMORY TABLE ISSUETYPESCREENSCHEMEENTITY(ID BIGINT NOT NULL,ISSUETYPE VARCHAR,SCHEME BIGINT,FIELDSCREENSCHEME BIGINT,CONSTRAINT PK_ISSUETYPESCREENSCHEMEENTITY PRIMARY KEY(ID))
CREATE INDEX FIELDSCREEN_SCHEME ON ISSUETYPESCREENSCHEMEENTITY(FIELDSCREENSCHEME)
CREATE MEMORY TABLE LISTENERCONFIG(ID BIGINT NOT NULL,CLAZZ VARCHAR,LISTENERNAME VARCHAR,CONSTRAINT PK_LISTENERCONFIG PRIMARY KEY(ID))
CREATE MEMORY TABLE MAILSERVER(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,MAILFROM VARCHAR,PREFIX VARCHAR,SMTP_PORT VARCHAR,SERVER_TYPE VARCHAR,SERVERNAME VARCHAR,JNDILOCATION VARCHAR,MAILUSERNAME VARCHAR,MAILPASSWORD VARCHAR,CONSTRAINT PK_MAILSERVER PRIMARY KEY(ID))
CREATE MEMORY TABLE NODEASSOCIATION(SOURCE_NODE_ID BIGINT NOT NULL,SOURCE_NODE_ENTITY VARCHAR NOT NULL,SINK_NODE_ID BIGINT NOT NULL,SINK_NODE_ENTITY VARCHAR NOT NULL,ASSOCIATION_TYPE VARCHAR NOT NULL,SEQUENCE INTEGER,CONSTRAINT PK_NODEASSOCIATION PRIMARY KEY(SOURCE_NODE_ID,SOURCE_NODE_ENTITY,SINK_NODE_ID,SINK_NODE_ENTITY,ASSOCIATION_TYPE))
CREATE INDEX NODE_SOURCE ON NODEASSOCIATION(SOURCE_NODE_ID,SOURCE_NODE_ENTITY)
CREATE INDEX NODE_SINK ON NODEASSOCIATION(SINK_NODE_ID,SINK_NODE_ENTITY)
CREATE MEMORY TABLE NOTIFICATION(ID BIGINT NOT NULL,SCHEME BIGINT,EVENT VARCHAR,EVENT_TYPE_ID BIGINT,TEMPLATE_ID BIGINT,NOTIF_TYPE VARCHAR,NOTIF_PARAMETER VARCHAR,CONSTRAINT PK_NOTIFICATION PRIMARY KEY(ID))
CREATE INDEX NTFCTN_SCHEME ON NOTIFICATION(SCHEME)
CREATE MEMORY TABLE NOTIFICATIONINSTANCE(ID BIGINT NOT NULL,NOTIFICATIONTYPE VARCHAR,SOURCE BIGINT,EMAILADDRESS VARCHAR,MESSAGEID VARCHAR,CONSTRAINT PK_NOTIFICATIONINSTANCE PRIMARY KEY(ID))
CREATE INDEX NOTIF_SOURCE ON NOTIFICATIONINSTANCE(SOURCE)
CREATE MEMORY TABLE NOTIFICATIONSCHEME(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,CONSTRAINT PK_NOTIFICATIONSCHEME PRIMARY KEY(ID))
CREATE MEMORY TABLE OS_CURRENTSTEP(ID BIGINT NOT NULL,ENTRY_ID BIGINT,STEP_ID INTEGER,ACTION_ID INTEGER,OWNER VARCHAR,START_DATE TIMESTAMP,DUE_DATE TIMESTAMP,FINISH_DATE TIMESTAMP,STATUS VARCHAR,CALLER VARCHAR,CONSTRAINT PK_OS_CURRENTSTEP PRIMARY KEY(ID))
CREATE INDEX WF_ENTRYID ON OS_CURRENTSTEP(ENTRY_ID)
CREATE MEMORY TABLE OS_CURRENTSTEP_PREV(ID BIGINT NOT NULL,PREVIOUS_ID BIGINT NOT NULL,CONSTRAINT PK_OS_CURRENTSTEP_PREV PRIMARY KEY(ID,PREVIOUS_ID))
CREATE MEMORY TABLE GROUPBASE(ID BIGINT NOT NULL,GROUPNAME VARCHAR,CONSTRAINT PK_GROUPBASE PRIMARY KEY(ID))
CREATE INDEX OSGROUP_NAME ON GROUPBASE(GROUPNAME)
CREATE MEMORY TABLE OS_HISTORYSTEP(ID BIGINT NOT NULL,ENTRY_ID BIGINT,STEP_ID INTEGER,ACTION_ID INTEGER,OWNER VARCHAR,START_DATE TIMESTAMP,DUE_DATE TIMESTAMP,FINISH_DATE TIMESTAMP,STATUS VARCHAR,CALLER VARCHAR,CONSTRAINT PK_OS_HISTORYSTEP PRIMARY KEY(ID))
CREATE MEMORY TABLE OS_HISTORYSTEP_PREV(ID BIGINT NOT NULL,PREVIOUS_ID BIGINT NOT NULL,CONSTRAINT PK_OS_HISTORYSTEP_PREV PRIMARY KEY(ID,PREVIOUS_ID))
CREATE MEMORY TABLE MEMBERSHIPBASE(ID BIGINT NOT NULL,USER_NAME VARCHAR,GROUP_NAME VARCHAR,CONSTRAINT PK_MEMBERSHIPBASE PRIMARY KEY(ID))
CREATE INDEX MSHIPBASE_USER ON MEMBERSHIPBASE(USER_NAME)
CREATE INDEX MSHIPBASE_GROUP ON MEMBERSHIPBASE(GROUP_NAME)
CREATE MEMORY TABLE PROPERTYDATA(ID BIGINT NOT NULL,PROPERTYVALUE OBJECT,CONSTRAINT PK_PROPERTYDATA PRIMARY KEY(ID))
CREATE MEMORY TABLE PROPERTYDATE(ID BIGINT NOT NULL,PROPERTYVALUE TIMESTAMP,CONSTRAINT PK_PROPERTYDATE PRIMARY KEY(ID))
CREATE MEMORY TABLE PROPERTYDECIMAL(ID BIGINT NOT NULL,PROPERTYVALUE DOUBLE,CONSTRAINT PK_PROPERTYDECIMAL PRIMARY KEY(ID))
CREATE MEMORY TABLE PROPERTYENTRY(ID BIGINT NOT NULL,ENTITY_NAME VARCHAR,ENTITY_ID BIGINT,PROPERTY_KEY VARCHAR,PROPERTYTYPE INTEGER,CONSTRAINT PK_PROPERTYENTRY PRIMARY KEY(ID))
CREATE INDEX OSPROPERTY_ALL ON PROPERTYENTRY(ENTITY_ID)
CREATE MEMORY TABLE PROPERTYNUMBER(ID BIGINT NOT NULL,PROPERTYVALUE BIGINT,CONSTRAINT PK_PROPERTYNUMBER PRIMARY KEY(ID))
CREATE MEMORY TABLE PROPERTYSTRING(ID BIGINT NOT NULL,PROPERTYVALUE VARCHAR,CONSTRAINT PK_PROPERTYSTRING PRIMARY KEY(ID))
CREATE MEMORY TABLE PROPERTYTEXT(ID BIGINT NOT NULL,PROPERTYVALUE VARCHAR,CONSTRAINT PK_PROPERTYTEXT PRIMARY KEY(ID))
CREATE MEMORY TABLE USERBASE(ID BIGINT NOT NULL,USERNAME VARCHAR,PASSWORD_HASH VARCHAR,CONSTRAINT PK_USERBASE PRIMARY KEY(ID))
CREATE INDEX OSUSER_NAME ON USERBASE(USERNAME)
CREATE MEMORY TABLE OS_WFENTRY(ID BIGINT NOT NULL,NAME VARCHAR,INITIALIZED INTEGER,STATE INTEGER,CONSTRAINT PK_OS_WFENTRY PRIMARY KEY(ID))
CREATE MEMORY TABLE OPTIONCONFIGURATION(ID BIGINT NOT NULL,FIELDID VARCHAR,OPTIONID VARCHAR,FIELDCONFIG BIGINT,SEQUENCE BIGINT,CONSTRAINT PK_OPTIONCONFIGURATION PRIMARY KEY(ID))
CREATE INDEX FIELDID_OPTIONID ON OPTIONCONFIGURATION(FIELDID,OPTIONID)
CREATE INDEX FIELDID_FIELDCONF ON OPTIONCONFIGURATION(FIELDID,FIELDCONFIG)
CREATE MEMORY TABLE JIRAPERMS(ID BIGINT NOT NULL,PERMTYPE BIGINT,PROJECTID BIGINT,GROUPNAME VARCHAR,CONSTRAINT PK_JIRAPERMS PRIMARY KEY(ID))
CREATE MEMORY TABLE PERMISSIONSCHEME(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,CONSTRAINT PK_PERMISSIONSCHEME PRIMARY KEY(ID))
CREATE MEMORY TABLE PORTALPAGE(ID BIGINT NOT NULL,USERNAME VARCHAR,PAGENAME VARCHAR,DESCRIPTION VARCHAR,SEQUENCE BIGINT,CONSTRAINT PK_PORTALPAGE PRIMARY KEY(ID))
CREATE MEMORY TABLE PORTLETCONFIGURATION(ID BIGINT NOT NULL,PORTALPAGE BIGINT,PORTLET_ID VARCHAR,COLUMN_NUMBER INTEGER,POSITIONSEQ INTEGER,CONSTRAINT PK_PORTLETCONFIGURATION PRIMARY KEY(ID))
CREATE MEMORY TABLE PRIORITY(ID VARCHAR NOT NULL,SEQUENCE BIGINT,PNAME VARCHAR,DESCRIPTION VARCHAR,ICONURL VARCHAR,STATUS_COLOR VARCHAR,CONSTRAINT PK_PRIORITY PRIMARY KEY(ID))
CREATE MEMORY TABLE PROJECT(ID BIGINT NOT NULL,PNAME VARCHAR,URL VARCHAR,LEAD VARCHAR,DESCRIPTION VARCHAR,PKEY VARCHAR,PCOUNTER BIGINT,ASSIGNEETYPE BIGINT,CONSTRAINT PK_PROJECT PRIMARY KEY(ID))
CREATE MEMORY TABLE PROJECTCATEGORY(ID BIGINT NOT NULL,CNAME VARCHAR,DESCRIPTION VARCHAR,CONSTRAINT PK_PROJECTCATEGORY PRIMARY KEY(ID))
CREATE MEMORY TABLE PROJECTROLE(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,CONSTRAINT PK_PROJECTROLE PRIMARY KEY(ID))
CREATE MEMORY TABLE PROJECTROLEACTOR(ID BIGINT NOT NULL,PID BIGINT,PROJECTROLEID BIGINT,ROLETYPE VARCHAR,ROLETYPEPARAMETER VARCHAR,CONSTRAINT PK_PROJECTROLEACTOR PRIMARY KEY(ID))
CREATE INDEX ROLE_PLAYER_IDX ON PROJECTROLEACTOR(PROJECTROLEID,PID)
CREATE MEMORY TABLE QRTZ_CALENDARS(ID BIGINT,CALENDAR_NAME VARCHAR NOT NULL,CALENDAR VARCHAR,CONSTRAINT PK_QRTZ_CALENDARS PRIMARY KEY(CALENDAR_NAME))
CREATE MEMORY TABLE QRTZ_CRON_TRIGGERS(ID BIGINT NOT NULL,TRIGGER_ID BIGINT,CRONEXPERSSION VARCHAR,CONSTRAINT PK_QRTZ_CRON_TRIGGERS PRIMARY KEY(ID))
CREATE MEMORY TABLE QRTZ_FIRED_TRIGGERS(ID BIGINT,ENTRY_ID VARCHAR NOT NULL,TRIGGER_ID BIGINT,TRIGGER_LISTENER VARCHAR,FIRED_TIME TIMESTAMP,TRIGGER_STATE VARCHAR,CONSTRAINT PK_QRTZ_FIRED_TRIGGERS PRIMARY KEY(ENTRY_ID))
CREATE MEMORY TABLE QRTZ_JOB_DETAILS(ID BIGINT NOT NULL,JOB_NAME VARCHAR,JOB_GROUP VARCHAR,CLASS_NAME VARCHAR,IS_DURABLE VARCHAR,IS_STATEFUL VARCHAR,REQUESTS_RECOVERY VARCHAR,JOB_DATA VARCHAR,CONSTRAINT PK_QRTZ_JOB_DETAILS PRIMARY KEY(ID))
CREATE MEMORY TABLE QRTZ_JOB_LISTENERS(ID BIGINT NOT NULL,JOB BIGINT,JOB_LISTENER VARCHAR,CONSTRAINT PK_QRTZ_JOB_LISTENERS PRIMARY KEY(ID))
CREATE MEMORY TABLE QRTZ_SIMPLE_TRIGGERS(ID BIGINT NOT NULL,TRIGGER_ID BIGINT,REPEAT_COUNT INTEGER,REPEAT_INTERVAL BIGINT,TIMES_TRIGGERED INTEGER,CONSTRAINT PK_QRTZ_SIMPLE_TRIGGERS PRIMARY KEY(ID))
CREATE MEMORY TABLE QRTZ_TRIGGER_LISTENERS(ID BIGINT NOT NULL,TRIGGER_ID BIGINT,TRIGGER_LISTENER VARCHAR,CONSTRAINT PK_QRTZ_TRIGGER_LISTENERS PRIMARY KEY(ID))
CREATE MEMORY TABLE QRTZ_TRIGGERS(ID BIGINT NOT NULL,TRIGGER_NAME VARCHAR,TRIGGER_GROUP VARCHAR,JOB BIGINT,NEXT_FIRE TIMESTAMP,TRIGGER_STATE VARCHAR,TRIGGER_TYPE VARCHAR,START_TIME TIMESTAMP,END_TIME TIMESTAMP,CALENDAR_NAME VARCHAR,MISFIRE_INSTR INTEGER,CONSTRAINT PK_QRTZ_TRIGGERS PRIMARY KEY(ID))
CREATE MEMORY TABLE RESOLUTION(ID VARCHAR NOT NULL,SEQUENCE BIGINT,PNAME VARCHAR,DESCRIPTION VARCHAR,ICONURL VARCHAR,CONSTRAINT PK_RESOLUTION PRIMARY KEY(ID))
CREATE MEMORY TABLE SCHEMEISSUESECURITIES(ID BIGINT NOT NULL,SCHEME BIGINT,SECURITY BIGINT,SEC_TYPE VARCHAR,SEC_PARAMETER VARCHAR,CONSTRAINT PK_SCHEMEISSUESECURITIES PRIMARY KEY(ID))
CREATE INDEX SEC_SCHEME ON SCHEMEISSUESECURITIES(SCHEME)
CREATE INDEX SEC_SECURITY ON SCHEMEISSUESECURITIES(SECURITY)
CREATE MEMORY TABLE SCHEMEISSUESECURITYLEVELS(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,SCHEME BIGINT,CONSTRAINT PK_SCHEMEISSUESECURITYLEVELS PRIMARY KEY(ID))
CREATE MEMORY TABLE SCHEMEPERMISSIONS(ID BIGINT NOT NULL,SCHEME BIGINT,PERMISSION BIGINT,PERM_TYPE VARCHAR,PERM_PARAMETER VARCHAR,CONSTRAINT PK_SCHEMEPERMISSIONS PRIMARY KEY(ID))
CREATE INDEX PRMSSN_SCHEME ON SCHEMEPERMISSIONS(SCHEME)
CREATE MEMORY TABLE SEARCHREQUEST(ID BIGINT NOT NULL,FILTERNAME VARCHAR,AUTHORNAME VARCHAR,DESCRIPTION VARCHAR,USERNAME VARCHAR,GROUPNAME VARCHAR,PROJECTID BIGINT,REQCONTENT VARCHAR,CONSTRAINT PK_SEARCHREQUEST PRIMARY KEY(ID))
CREATE INDEX SR_AUTHOR ON SEARCHREQUEST(AUTHORNAME)
CREATE INDEX SR_GROUP ON SEARCHREQUEST(GROUPNAME)
CREATE MEMORY TABLE SEQUENCE_VALUE_ITEM(SEQ_NAME VARCHAR NOT NULL,SEQ_ID BIGINT,CONSTRAINT PK_SEQUENCE_VALUE_ITEM PRIMARY KEY(SEQ_NAME))
CREATE MEMORY TABLE SERVICECONFIG(ID BIGINT NOT NULL,DELAYTIME BIGINT,CLAZZ VARCHAR,SERVICENAME VARCHAR,CONSTRAINT PK_SERVICECONFIG PRIMARY KEY(ID))
CREATE MEMORY TABLE ISSUESTATUS(ID VARCHAR NOT NULL,SEQUENCE BIGINT,PNAME VARCHAR,DESCRIPTION VARCHAR,ICONURL VARCHAR,CONSTRAINT PK_ISSUESTATUS PRIMARY KEY(ID))
CREATE MEMORY TABLE TRACKBACK_PING(ID BIGINT NOT NULL,ISSUE BIGINT,URL VARCHAR,TITLE VARCHAR,BLOGNAME VARCHAR,EXCERPT VARCHAR,CREATED TIMESTAMP,CONSTRAINT PK_TRACKBACK_PING PRIMARY KEY(ID))
CREATE MEMORY TABLE TRUSTEDAPP(ID BIGINT NOT NULL,APPLICATION_ID VARCHAR,NAME VARCHAR,PUBLIC_KEY VARCHAR,IP_MATCH VARCHAR,URL_MATCH VARCHAR,TIMEOUT BIGINT,CREATED TIMESTAMP,CREATED_BY VARCHAR,UPDATED TIMESTAMP,UPDATED_BY VARCHAR,CONSTRAINT PK_TRUSTEDAPP PRIMARY KEY(ID))
CREATE UNIQUE INDEX TRUSTEDAPP_ID ON TRUSTEDAPP(APPLICATION_ID)
CREATE MEMORY TABLE UPGRADEHISTORY(ID BIGINT,UPGRADECLASS VARCHAR NOT NULL,CONSTRAINT PK_UPGRADEHISTORY PRIMARY KEY(UPGRADECLASS))
CREATE MEMORY TABLE USERASSOCIATION(SOURCE_NAME VARCHAR NOT NULL,SINK_NODE_ID BIGINT NOT NULL,SINK_NODE_ENTITY VARCHAR NOT NULL,ASSOCIATION_TYPE VARCHAR NOT NULL,SEQUENCE INTEGER,CONSTRAINT PK_USERASSOCIATION PRIMARY KEY(SOURCE_NAME,SINK_NODE_ID,SINK_NODE_ENTITY,ASSOCIATION_TYPE))
CREATE INDEX USER_SOURCE ON USERASSOCIATION(SOURCE_NAME)
CREATE INDEX USER_SINK ON USERASSOCIATION(SINK_NODE_ID,SINK_NODE_ENTITY)
CREATE MEMORY TABLE PROJECTVERSION(ID BIGINT NOT NULL,PROJECT BIGINT,VNAME VARCHAR,DESCRIPTION VARCHAR,SEQUENCE BIGINT,RELEASED VARCHAR,ARCHIVED VARCHAR,URL VARCHAR,RELEASEDATE TIMESTAMP,CONSTRAINT PK_PROJECTVERSION PRIMARY KEY(ID))
CREATE MEMORY TABLE VERSIONCONTROL(ID BIGINT NOT NULL,VCSNAME VARCHAR,VCSDESCRIPTION VARCHAR,VCSTYPE VARCHAR,CONSTRAINT PK_VERSIONCONTROL PRIMARY KEY(ID))
CREATE MEMORY TABLE JIRAWORKFLOWS(ID BIGINT NOT NULL,WORKFLOWNAME VARCHAR,CREATORNAME VARCHAR,DESCRIPTOR VARCHAR,ISLOCKED VARCHAR,CONSTRAINT PK_JIRAWORKFLOWS PRIMARY KEY(ID))
CREATE MEMORY TABLE WORKFLOWSCHEME(ID BIGINT NOT NULL,NAME VARCHAR,DESCRIPTION VARCHAR,CONSTRAINT PK_WORKFLOWSCHEME PRIMARY KEY(ID))
CREATE MEMORY TABLE WORKFLOWSCHEMEENTITY(ID BIGINT NOT NULL,SCHEME BIGINT,WORKFLOW VARCHAR,ISSUETYPE VARCHAR,CONSTRAINT PK_WORKFLOWSCHEMEENTITY PRIMARY KEY(ID))
CREATE INDEX WORKFLOW_SCHEME ON WORKFLOWSCHEMEENTITY(SCHEME)
CREATE MEMORY TABLE WORKLOG(ID BIGINT NOT NULL,ISSUEID BIGINT,AUTHOR VARCHAR,GROUPLEVEL VARCHAR,ROLELEVEL BIGINT,WORKLOGBODY VARCHAR,CREATED TIMESTAMP,UPDATEAUTHOR VARCHAR,UPDATED TIMESTAMP,STARTDATE TIMESTAMP,TIMEWORKED BIGINT,CONSTRAINT PK_WORKLOG PRIMARY KEY(ID))
CREATE INDEX WORKLOG_ISSUE ON WORKLOG(ISSUEID)
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 20
SET SCHEMA PUBLIC
INSERT INTO LISTENERCONFIG VALUES(10000,'com.atlassian.jira.event.listeners.cache.IssueCacheListener','Issue Cache Listener')
INSERT INTO LISTENERCONFIG VALUES(10001,'com.atlassian.jira.event.listeners.mail.MailListener','Mail Listener')
INSERT INTO PROPERTYENTRY VALUES(10000,'jira.properties',1,'jira.i18n.language.index',5)
INSERT INTO PROPERTYENTRY VALUES(10001,'jira.properties',1,'jira.sid.key',5)
INSERT INTO PROPERTYSTRING VALUES(10000,'english')
INSERT INTO PROPERTYSTRING VALUES(10001,'AUQY-TDT1-K34D-6BB8')
INSERT INTO SEQUENCE_VALUE_ITEM VALUES('ListenerConfig',10010)
INSERT INTO SEQUENCE_VALUE_ITEM VALUES('OSPropertyEntry',10010)
INSERT INTO SEQUENCE_VALUE_ITEM VALUES('ServiceConfig',10010)
INSERT INTO SERVICECONFIG VALUES(10000,60000,'com.atlassian.jira.service.services.mail.MailQueueService','Mail Queue Service')
